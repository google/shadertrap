// Copyright 2021 The ShaderTrap Project Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#ifndef LIBSHADERTRAP_GL_FUNCTIONS_H
#define LIBSHADERTRAP_GL_FUNCTIONS_H

#include <functional>

#include "GLES3/gl32.h"

namespace shadertrap {

struct GlFunctions {
  std::function<void(GLuint, GLuint)> glActiveShaderProgram;
  std::function<void(GLenum)> glActiveTexture;
  std::function<void(GLenum, GLfloat)> glAlphaFunc;
  std::function<void(GLenum, GLfixed)> glAlphaFuncx;
  std::function<void(GLuint, GLuint)> glAttachShader;
  std::function<void(GLenum, GLuint)> glBeginQuery;
  std::function<void(GLenum)> glBeginTransformFeedback;
  std::function<void(GLuint, GLuint, const GLchar*)> glBindAttribLocation;
  std::function<void(GLenum, GLuint)> glBindBuffer;
  std::function<void(GLenum, GLuint, GLuint)> glBindBufferBase;
  std::function<void(GLenum, GLuint, GLuint, GLintptr, GLsizeiptr)> glBindBufferRange;
  std::function<void(GLenum, GLuint)> glBindFramebuffer;
  std::function<void(GLuint, GLuint, GLint, GLboolean, GLint, GLenum, GLenum)> glBindImageTexture;
  std::function<void(GLuint)> glBindProgramPipeline;
  std::function<void(GLenum, GLuint)> glBindRenderbuffer;
  std::function<void(GLuint, GLuint)> glBindSampler;
  std::function<void(GLenum, GLuint)> glBindTexture;
  std::function<void(GLenum, GLuint)> glBindTransformFeedback;
  std::function<void(GLuint)> glBindVertexArray;
  std::function<void(GLuint, GLuint, GLintptr, GLsizei)> glBindVertexBuffer;
  std::function<void()> glBlendBarrier;
  std::function<void(GLfloat, GLfloat, GLfloat, GLfloat)> glBlendColor;
  std::function<void(GLenum)> glBlendEquation;
  std::function<void(GLenum, GLenum)> glBlendEquationSeparate;
  std::function<void(GLuint, GLenum, GLenum)> glBlendEquationSeparatei;
  std::function<void(GLuint, GLenum)> glBlendEquationi;
  std::function<void(GLenum, GLenum)> glBlendFunc;
  std::function<void(GLenum, GLenum, GLenum, GLenum)> glBlendFuncSeparate;
  std::function<void(GLuint, GLenum, GLenum, GLenum, GLenum)> glBlendFuncSeparatei;
  std::function<void(GLuint, GLenum, GLenum)> glBlendFunci;
  std::function<void(GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLbitfield, GLenum)> glBlitFramebuffer;
  std::function<void(GLenum, GLsizeiptr, const void*, GLenum)> glBufferData;
  std::function<void(GLenum, GLintptr, GLsizeiptr, const void*)> glBufferSubData;
  std::function<GLenum(GLenum)> glCheckFramebufferStatus;
  std::function<void(GLbitfield)> glClear;
  std::function<void(GLenum, GLint, GLfloat, GLint)> glClearBufferfi;
  std::function<void(GLenum, GLint, const GLfloat*)> glClearBufferfv;
  std::function<void(GLenum, GLint, const GLint*)> glClearBufferiv;
  std::function<void(GLenum, GLint, const GLuint*)> glClearBufferuiv;
  std::function<void(GLfloat, GLfloat, GLfloat, GLfloat)> glClearColor;
  std::function<void(GLfixed, GLfixed, GLfixed, GLfixed)> glClearColorx;
  std::function<void(GLfloat)> glClearDepthf;
  std::function<void(GLfixed)> glClearDepthx;
  std::function<void(GLint)> glClearStencil;
  std::function<void(GLenum)> glClientActiveTexture;
  std::function<GLenum(GLsync, GLbitfield, GLuint64)> glClientWaitSync;
  std::function<void(GLenum, const GLfloat*)> glClipPlanef;
  std::function<void(GLenum, const GLfixed*)> glClipPlanex;
  std::function<void(GLfloat, GLfloat, GLfloat, GLfloat)> glColor4f;
  std::function<void(GLubyte, GLubyte, GLubyte, GLubyte)> glColor4ub;
  std::function<void(GLfixed, GLfixed, GLfixed, GLfixed)> glColor4x;
  std::function<void(GLboolean, GLboolean, GLboolean, GLboolean)> glColorMask;
  std::function<void(GLuint, GLboolean, GLboolean, GLboolean, GLboolean)> glColorMaski;
  std::function<void(GLint, GLenum, GLsizei, const void*)> glColorPointer;
  std::function<void(GLuint)> glCompileShader;
  std::function<void(GLenum, GLint, GLenum, GLsizei, GLsizei, GLint, GLsizei, const void*)> glCompressedTexImage2D;
  std::function<void(GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLsizei, const void*)> glCompressedTexImage3D;
  std::function<void(GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei, const void*)> glCompressedTexSubImage2D;
  std::function<void(GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, const void*)> glCompressedTexSubImage3D;
  std::function<void(GLenum, GLenum, GLintptr, GLintptr, GLsizeiptr)> glCopyBufferSubData;
  std::function<void(GLuint, GLenum, GLint, GLint, GLint, GLint, GLuint, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei)> glCopyImageSubData;
  std::function<void(GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLsizei, GLint)> glCopyTexImage2D;
  std::function<void(GLenum, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei)> glCopyTexSubImage2D;
  std::function<void(GLenum, GLint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei)> glCopyTexSubImage3D;
  std::function<GLuint()> glCreateProgram;
  std::function<GLuint(GLenum)> glCreateShader;
  std::function<GLuint(GLenum, GLsizei, const GLchar*const*)> glCreateShaderProgramv;
  std::function<void(GLenum)> glCullFace;
  std::function<void(GLDEBUGPROC, const void*)> glDebugMessageCallback;
  std::function<void(GLenum, GLenum, GLenum, GLsizei, const GLuint*, GLboolean)> glDebugMessageControl;
  std::function<void(GLenum, GLenum, GLuint, GLenum, GLsizei, const GLchar*)> glDebugMessageInsert;
  std::function<void(GLsizei, const GLuint*)> glDeleteBuffers;
  std::function<void(GLsizei, const GLuint*)> glDeleteFramebuffers;
  std::function<void(GLuint)> glDeleteProgram;
  std::function<void(GLsizei, const GLuint*)> glDeleteProgramPipelines;
  std::function<void(GLsizei, const GLuint*)> glDeleteQueries;
  std::function<void(GLsizei, const GLuint*)> glDeleteRenderbuffers;
  std::function<void(GLsizei, const GLuint*)> glDeleteSamplers;
  std::function<void(GLuint)> glDeleteShader;
  std::function<void(GLsync)> glDeleteSync;
  std::function<void(GLsizei, const GLuint*)> glDeleteTextures;
  std::function<void(GLsizei, const GLuint*)> glDeleteTransformFeedbacks;
  std::function<void(GLsizei, const GLuint*)> glDeleteVertexArrays;
  std::function<void(GLenum)> glDepthFunc;
  std::function<void(GLboolean)> glDepthMask;
  std::function<void(GLfloat, GLfloat)> glDepthRangef;
  std::function<void(GLfixed, GLfixed)> glDepthRangex;
  std::function<void(GLuint, GLuint)> glDetachShader;
  std::function<void(GLenum)> glDisable;
  std::function<void(GLenum)> glDisableClientState;
  std::function<void(GLuint)> glDisableVertexAttribArray;
  std::function<void(GLenum, GLuint)> glDisablei;
  std::function<void(GLuint, GLuint, GLuint)> glDispatchCompute;
  std::function<void(GLintptr)> glDispatchComputeIndirect;
  std::function<void(GLenum, GLint, GLsizei)> glDrawArrays;
  std::function<void(GLenum, const void*)> glDrawArraysIndirect;
  std::function<void(GLenum, GLint, GLsizei, GLsizei)> glDrawArraysInstanced;
  std::function<void(GLsizei, const GLenum*)> glDrawBuffers;
  std::function<void(GLenum, GLsizei, GLenum, const void*)> glDrawElements;
  std::function<void(GLenum, GLsizei, GLenum, const void*, GLint)> glDrawElementsBaseVertex;
  std::function<void(GLenum, GLenum, const void*)> glDrawElementsIndirect;
  std::function<void(GLenum, GLsizei, GLenum, const void*, GLsizei)> glDrawElementsInstanced;
  std::function<void(GLenum, GLsizei, GLenum, const void*, GLsizei, GLint)> glDrawElementsInstancedBaseVertex;
  std::function<void(GLenum, GLuint, GLuint, GLsizei, GLenum, const void*)> glDrawRangeElements;
  std::function<void(GLenum, GLuint, GLuint, GLsizei, GLenum, const void*, GLint)> glDrawRangeElementsBaseVertex;
  std::function<void(GLenum)> glEnable;
  std::function<void(GLenum)> glEnableClientState;
  std::function<void(GLuint)> glEnableVertexAttribArray;
  std::function<void(GLenum, GLuint)> glEnablei;
  std::function<void(GLenum)> glEndQuery;
  std::function<void()> glEndTransformFeedback;
  std::function<GLsync(GLenum, GLbitfield)> glFenceSync;
  std::function<void()> glFinish;
  std::function<void()> glFlush;
  std::function<void(GLenum, GLintptr, GLsizeiptr)> glFlushMappedBufferRange;
  std::function<void(GLenum, GLfloat)> glFogf;
  std::function<void(GLenum, const GLfloat*)> glFogfv;
  std::function<void(GLenum, GLfixed)> glFogx;
  std::function<void(GLenum, const GLfixed*)> glFogxv;
  std::function<void(GLenum, GLenum, GLint)> glFramebufferParameteri;
  std::function<void(GLenum, GLenum, GLenum, GLuint)> glFramebufferRenderbuffer;
  std::function<void(GLenum, GLenum, GLuint, GLint)> glFramebufferTexture;
  std::function<void(GLenum, GLenum, GLenum, GLuint, GLint)> glFramebufferTexture2D;
  std::function<void(GLenum, GLenum, GLuint, GLint, GLint)> glFramebufferTextureLayer;
  std::function<void(GLenum)> glFrontFace;
  std::function<void(GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat)> glFrustumf;
  std::function<void(GLfixed, GLfixed, GLfixed, GLfixed, GLfixed, GLfixed)> glFrustumx;
  std::function<void(GLsizei, GLuint*)> glGenBuffers;
  std::function<void(GLsizei, GLuint*)> glGenFramebuffers;
  std::function<void(GLsizei, GLuint*)> glGenProgramPipelines;
  std::function<void(GLsizei, GLuint*)> glGenQueries;
  std::function<void(GLsizei, GLuint*)> glGenRenderbuffers;
  std::function<void(GLsizei, GLuint*)> glGenSamplers;
  std::function<void(GLsizei, GLuint*)> glGenTextures;
  std::function<void(GLsizei, GLuint*)> glGenTransformFeedbacks;
  std::function<void(GLsizei, GLuint*)> glGenVertexArrays;
  std::function<void(GLenum)> glGenerateMipmap;
  std::function<void(GLuint, GLuint, GLsizei, GLsizei*, GLint*, GLenum*, GLchar*)> glGetActiveAttrib;
  std::function<void(GLuint, GLuint, GLsizei, GLsizei*, GLint*, GLenum*, GLchar*)> glGetActiveUniform;
  std::function<void(GLuint, GLuint, GLsizei, GLsizei*, GLchar*)> glGetActiveUniformBlockName;
  std::function<void(GLuint, GLuint, GLenum, GLint*)> glGetActiveUniformBlockiv;
  std::function<void(GLuint, GLsizei, const GLuint*, GLenum, GLint*)> glGetActiveUniformsiv;
  std::function<void(GLuint, GLsizei, GLsizei*, GLuint*)> glGetAttachedShaders;
  std::function<GLint(GLuint, const GLchar*)> glGetAttribLocation;
  std::function<void(GLenum, GLuint, GLboolean*)> glGetBooleani_v;
  std::function<void(GLenum, GLboolean*)> glGetBooleanv;
  std::function<void(GLenum, GLenum, GLint64*)> glGetBufferParameteri64v;
  std::function<void(GLenum, GLenum, GLint*)> glGetBufferParameteriv;
  std::function<void(GLenum, GLenum, void**)> glGetBufferPointerv;
  std::function<void(GLenum, GLfloat*)> glGetClipPlanef;
  std::function<void(GLenum, GLfixed*)> glGetClipPlanex;
  std::function<GLuint(GLuint, GLsizei, GLenum*, GLenum*, GLuint*, GLenum*, GLsizei*, GLchar*)> glGetDebugMessageLog;
  std::function<GLenum()> glGetError;
  std::function<void(GLenum, GLfixed*)> glGetFixedv;
  std::function<void(GLenum, GLfloat*)> glGetFloatv;
  std::function<GLint(GLuint, const GLchar*)> glGetFragDataLocation;
  std::function<void(GLenum, GLenum, GLenum, GLint*)> glGetFramebufferAttachmentParameteriv;
  std::function<void(GLenum, GLenum, GLint*)> glGetFramebufferParameteriv;
  std::function<GLenum()> glGetGraphicsResetStatus;
  std::function<void(GLenum, GLuint, GLint64*)> glGetInteger64i_v;
  std::function<void(GLenum, GLint64*)> glGetInteger64v;
  std::function<void(GLenum, GLuint, GLint*)> glGetIntegeri_v;
  std::function<void(GLenum, GLint*)> glGetIntegerv;
  std::function<void(GLenum, GLenum, GLenum, GLsizei, GLint*)> glGetInternalformativ;
  std::function<void(GLenum, GLenum, GLfloat*)> glGetLightfv;
  std::function<void(GLenum, GLenum, GLfixed*)> glGetLightxv;
  std::function<void(GLenum, GLenum, GLfloat*)> glGetMaterialfv;
  std::function<void(GLenum, GLenum, GLfixed*)> glGetMaterialxv;
  std::function<void(GLenum, GLuint, GLfloat*)> glGetMultisamplefv;
  std::function<void(GLenum, GLuint, GLsizei, GLsizei*, GLchar*)> glGetObjectLabel;
  std::function<void(const void*, GLsizei, GLsizei*, GLchar*)> glGetObjectPtrLabel;
  std::function<void(GLenum, void**)> glGetPointerv;
  std::function<void(GLuint, GLsizei, GLsizei*, GLenum*, void*)> glGetProgramBinary;
  std::function<void(GLuint, GLsizei, GLsizei*, GLchar*)> glGetProgramInfoLog;
  std::function<void(GLuint, GLenum, GLenum, GLint*)> glGetProgramInterfaceiv;
  std::function<void(GLuint, GLsizei, GLsizei*, GLchar*)> glGetProgramPipelineInfoLog;
  std::function<void(GLuint, GLenum, GLint*)> glGetProgramPipelineiv;
  std::function<GLuint(GLuint, GLenum, const GLchar*)> glGetProgramResourceIndex;
  std::function<GLint(GLuint, GLenum, const GLchar*)> glGetProgramResourceLocation;
  std::function<void(GLuint, GLenum, GLuint, GLsizei, GLsizei*, GLchar*)> glGetProgramResourceName;
  std::function<void(GLuint, GLenum, GLuint, GLsizei, const GLenum*, GLsizei, GLsizei*, GLint*)> glGetProgramResourceiv;
  std::function<void(GLuint, GLenum, GLint*)> glGetProgramiv;
  std::function<void(GLuint, GLenum, GLuint*)> glGetQueryObjectuiv;
  std::function<void(GLenum, GLenum, GLint*)> glGetQueryiv;
  std::function<void(GLenum, GLenum, GLint*)> glGetRenderbufferParameteriv;
  std::function<void(GLuint, GLenum, GLint*)> glGetSamplerParameterIiv;
  std::function<void(GLuint, GLenum, GLuint*)> glGetSamplerParameterIuiv;
  std::function<void(GLuint, GLenum, GLfloat*)> glGetSamplerParameterfv;
  std::function<void(GLuint, GLenum, GLint*)> glGetSamplerParameteriv;
  std::function<void(GLuint, GLsizei, GLsizei*, GLchar*)> glGetShaderInfoLog;
  std::function<void(GLenum, GLenum, GLint*, GLint*)> glGetShaderPrecisionFormat;
  std::function<void(GLuint, GLsizei, GLsizei*, GLchar*)> glGetShaderSource;
  std::function<void(GLuint, GLenum, GLint*)> glGetShaderiv;
  std::function<const GLubyte*(GLenum)> glGetString;
  std::function<const GLubyte*(GLenum, GLuint)> glGetStringi;
  std::function<void(GLsync, GLenum, GLsizei, GLsizei*, GLint*)> glGetSynciv;
  std::function<void(GLenum, GLenum, GLfloat*)> glGetTexEnvfv;
  std::function<void(GLenum, GLenum, GLint*)> glGetTexEnviv;
  std::function<void(GLenum, GLenum, GLfixed*)> glGetTexEnvxv;
  std::function<void(GLenum, GLint, GLenum, GLfloat*)> glGetTexLevelParameterfv;
  std::function<void(GLenum, GLint, GLenum, GLint*)> glGetTexLevelParameteriv;
  std::function<void(GLenum, GLenum, GLint*)> glGetTexParameterIiv;
  std::function<void(GLenum, GLenum, GLuint*)> glGetTexParameterIuiv;
  std::function<void(GLenum, GLenum, GLfloat*)> glGetTexParameterfv;
  std::function<void(GLenum, GLenum, GLint*)> glGetTexParameteriv;
  std::function<void(GLenum, GLenum, GLfixed*)> glGetTexParameterxv;
  std::function<void(GLuint, GLuint, GLsizei, GLsizei*, GLsizei*, GLenum*, GLchar*)> glGetTransformFeedbackVarying;
  std::function<GLuint(GLuint, const GLchar*)> glGetUniformBlockIndex;
  std::function<void(GLuint, GLsizei, const GLchar*const*, GLuint*)> glGetUniformIndices;
  std::function<GLint(GLuint, const GLchar*)> glGetUniformLocation;
  std::function<void(GLuint, GLint, GLfloat*)> glGetUniformfv;
  std::function<void(GLuint, GLint, GLint*)> glGetUniformiv;
  std::function<void(GLuint, GLint, GLuint*)> glGetUniformuiv;
  std::function<void(GLuint, GLenum, GLint*)> glGetVertexAttribIiv;
  std::function<void(GLuint, GLenum, GLuint*)> glGetVertexAttribIuiv;
  std::function<void(GLuint, GLenum, void**)> glGetVertexAttribPointerv;
  std::function<void(GLuint, GLenum, GLfloat*)> glGetVertexAttribfv;
  std::function<void(GLuint, GLenum, GLint*)> glGetVertexAttribiv;
  std::function<void(GLuint, GLint, GLsizei, GLfloat*)> glGetnUniformfv;
  std::function<void(GLuint, GLint, GLsizei, GLint*)> glGetnUniformiv;
  std::function<void(GLuint, GLint, GLsizei, GLuint*)> glGetnUniformuiv;
  std::function<void(GLenum, GLenum)> glHint;
  std::function<void(GLenum, GLsizei, const GLenum*)> glInvalidateFramebuffer;
  std::function<void(GLenum, GLsizei, const GLenum*, GLint, GLint, GLsizei, GLsizei)> glInvalidateSubFramebuffer;
  std::function<GLboolean(GLuint)> glIsBuffer;
  std::function<GLboolean(GLenum)> glIsEnabled;
  std::function<GLboolean(GLenum, GLuint)> glIsEnabledi;
  std::function<GLboolean(GLuint)> glIsFramebuffer;
  std::function<GLboolean(GLuint)> glIsProgram;
  std::function<GLboolean(GLuint)> glIsProgramPipeline;
  std::function<GLboolean(GLuint)> glIsQuery;
  std::function<GLboolean(GLuint)> glIsRenderbuffer;
  std::function<GLboolean(GLuint)> glIsSampler;
  std::function<GLboolean(GLuint)> glIsShader;
  std::function<GLboolean(GLsync)> glIsSync;
  std::function<GLboolean(GLuint)> glIsTexture;
  std::function<GLboolean(GLuint)> glIsTransformFeedback;
  std::function<GLboolean(GLuint)> glIsVertexArray;
  std::function<void(GLenum, GLfloat)> glLightModelf;
  std::function<void(GLenum, const GLfloat*)> glLightModelfv;
  std::function<void(GLenum, GLfixed)> glLightModelx;
  std::function<void(GLenum, const GLfixed*)> glLightModelxv;
  std::function<void(GLenum, GLenum, GLfloat)> glLightf;
  std::function<void(GLenum, GLenum, const GLfloat*)> glLightfv;
  std::function<void(GLenum, GLenum, GLfixed)> glLightx;
  std::function<void(GLenum, GLenum, const GLfixed*)> glLightxv;
  std::function<void(GLfloat)> glLineWidth;
  std::function<void(GLfixed)> glLineWidthx;
  std::function<void(GLuint)> glLinkProgram;
  std::function<void()> glLoadIdentity;
  std::function<void(const GLfloat*)> glLoadMatrixf;
  std::function<void(const GLfixed*)> glLoadMatrixx;
  std::function<void(GLenum)> glLogicOp;
  std::function<void*(GLenum, GLintptr, GLsizeiptr, GLbitfield)> glMapBufferRange;
  std::function<void(GLenum, GLenum, GLfloat)> glMaterialf;
  std::function<void(GLenum, GLenum, const GLfloat*)> glMaterialfv;
  std::function<void(GLenum, GLenum, GLfixed)> glMaterialx;
  std::function<void(GLenum, GLenum, const GLfixed*)> glMaterialxv;
  std::function<void(GLenum)> glMatrixMode;
  std::function<void(GLbitfield)> glMemoryBarrier;
  std::function<void(GLbitfield)> glMemoryBarrierByRegion;
  std::function<void(GLfloat)> glMinSampleShading;
  std::function<void(const GLfloat*)> glMultMatrixf;
  std::function<void(const GLfixed*)> glMultMatrixx;
  std::function<void(GLenum, GLfloat, GLfloat, GLfloat, GLfloat)> glMultiTexCoord4f;
  std::function<void(GLenum, GLfixed, GLfixed, GLfixed, GLfixed)> glMultiTexCoord4x;
  std::function<void(GLfloat, GLfloat, GLfloat)> glNormal3f;
  std::function<void(GLfixed, GLfixed, GLfixed)> glNormal3x;
  std::function<void(GLenum, GLsizei, const void*)> glNormalPointer;
  std::function<void(GLenum, GLuint, GLsizei, const GLchar*)> glObjectLabel;
  std::function<void(const void*, GLsizei, const GLchar*)> glObjectPtrLabel;
  std::function<void(GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat)> glOrthof;
  std::function<void(GLfixed, GLfixed, GLfixed, GLfixed, GLfixed, GLfixed)> glOrthox;
  std::function<void(GLenum, GLint)> glPatchParameteri;
  std::function<void()> glPauseTransformFeedback;
  std::function<void(GLenum, GLint)> glPixelStorei;
  std::function<void(GLenum, GLfloat)> glPointParameterf;
  std::function<void(GLenum, const GLfloat*)> glPointParameterfv;
  std::function<void(GLenum, GLfixed)> glPointParameterx;
  std::function<void(GLenum, const GLfixed*)> glPointParameterxv;
  std::function<void(GLfloat)> glPointSize;
  std::function<void(GLfixed)> glPointSizex;
  std::function<void(GLfloat, GLfloat)> glPolygonOffset;
  std::function<void(GLfixed, GLfixed)> glPolygonOffsetx;
  std::function<void()> glPopDebugGroup;
  std::function<void()> glPopMatrix;
  std::function<void(GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat)> glPrimitiveBoundingBox;
  std::function<void(GLuint, GLenum, const void*, GLsizei)> glProgramBinary;
  std::function<void(GLuint, GLenum, GLint)> glProgramParameteri;
  std::function<void(GLuint, GLint, GLfloat)> glProgramUniform1f;
  std::function<void(GLuint, GLint, GLsizei, const GLfloat*)> glProgramUniform1fv;
  std::function<void(GLuint, GLint, GLint)> glProgramUniform1i;
  std::function<void(GLuint, GLint, GLsizei, const GLint*)> glProgramUniform1iv;
  std::function<void(GLuint, GLint, GLuint)> glProgramUniform1ui;
  std::function<void(GLuint, GLint, GLsizei, const GLuint*)> glProgramUniform1uiv;
  std::function<void(GLuint, GLint, GLfloat, GLfloat)> glProgramUniform2f;
  std::function<void(GLuint, GLint, GLsizei, const GLfloat*)> glProgramUniform2fv;
  std::function<void(GLuint, GLint, GLint, GLint)> glProgramUniform2i;
  std::function<void(GLuint, GLint, GLsizei, const GLint*)> glProgramUniform2iv;
  std::function<void(GLuint, GLint, GLuint, GLuint)> glProgramUniform2ui;
  std::function<void(GLuint, GLint, GLsizei, const GLuint*)> glProgramUniform2uiv;
  std::function<void(GLuint, GLint, GLfloat, GLfloat, GLfloat)> glProgramUniform3f;
  std::function<void(GLuint, GLint, GLsizei, const GLfloat*)> glProgramUniform3fv;
  std::function<void(GLuint, GLint, GLint, GLint, GLint)> glProgramUniform3i;
  std::function<void(GLuint, GLint, GLsizei, const GLint*)> glProgramUniform3iv;
  std::function<void(GLuint, GLint, GLuint, GLuint, GLuint)> glProgramUniform3ui;
  std::function<void(GLuint, GLint, GLsizei, const GLuint*)> glProgramUniform3uiv;
  std::function<void(GLuint, GLint, GLfloat, GLfloat, GLfloat, GLfloat)> glProgramUniform4f;
  std::function<void(GLuint, GLint, GLsizei, const GLfloat*)> glProgramUniform4fv;
  std::function<void(GLuint, GLint, GLint, GLint, GLint, GLint)> glProgramUniform4i;
  std::function<void(GLuint, GLint, GLsizei, const GLint*)> glProgramUniform4iv;
  std::function<void(GLuint, GLint, GLuint, GLuint, GLuint, GLuint)> glProgramUniform4ui;
  std::function<void(GLuint, GLint, GLsizei, const GLuint*)> glProgramUniform4uiv;
  std::function<void(GLuint, GLint, GLsizei, GLboolean, const GLfloat*)> glProgramUniformMatrix2fv;
  std::function<void(GLuint, GLint, GLsizei, GLboolean, const GLfloat*)> glProgramUniformMatrix2x3fv;
  std::function<void(GLuint, GLint, GLsizei, GLboolean, const GLfloat*)> glProgramUniformMatrix2x4fv;
  std::function<void(GLuint, GLint, GLsizei, GLboolean, const GLfloat*)> glProgramUniformMatrix3fv;
  std::function<void(GLuint, GLint, GLsizei, GLboolean, const GLfloat*)> glProgramUniformMatrix3x2fv;
  std::function<void(GLuint, GLint, GLsizei, GLboolean, const GLfloat*)> glProgramUniformMatrix3x4fv;
  std::function<void(GLuint, GLint, GLsizei, GLboolean, const GLfloat*)> glProgramUniformMatrix4fv;
  std::function<void(GLuint, GLint, GLsizei, GLboolean, const GLfloat*)> glProgramUniformMatrix4x2fv;
  std::function<void(GLuint, GLint, GLsizei, GLboolean, const GLfloat*)> glProgramUniformMatrix4x3fv;
  std::function<void(GLenum, GLuint, GLsizei, const GLchar*)> glPushDebugGroup;
  std::function<void()> glPushMatrix;
  std::function<void(GLenum)> glReadBuffer;
  std::function<void(GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, void*)> glReadPixels;
  std::function<void(GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, GLsizei, void*)> glReadnPixels;
  std::function<void()> glReleaseShaderCompiler;
  std::function<void(GLenum, GLenum, GLsizei, GLsizei)> glRenderbufferStorage;
  std::function<void(GLenum, GLsizei, GLenum, GLsizei, GLsizei)> glRenderbufferStorageMultisample;
  std::function<void()> glResumeTransformFeedback;
  std::function<void(GLfloat, GLfloat, GLfloat, GLfloat)> glRotatef;
  std::function<void(GLfixed, GLfixed, GLfixed, GLfixed)> glRotatex;
  std::function<void(GLfloat, GLboolean)> glSampleCoverage;
  //std::function<void(GLclampx, GLboolean)> glSampleCoveragex;
  std::function<void(GLuint, GLbitfield)> glSampleMaski;
  std::function<void(GLuint, GLenum, const GLint*)> glSamplerParameterIiv;
  std::function<void(GLuint, GLenum, const GLuint*)> glSamplerParameterIuiv;
  std::function<void(GLuint, GLenum, GLfloat)> glSamplerParameterf;
  std::function<void(GLuint, GLenum, const GLfloat*)> glSamplerParameterfv;
  std::function<void(GLuint, GLenum, GLint)> glSamplerParameteri;
  std::function<void(GLuint, GLenum, const GLint*)> glSamplerParameteriv;
  std::function<void(GLfloat, GLfloat, GLfloat)> glScalef;
  std::function<void(GLfixed, GLfixed, GLfixed)> glScalex;
  std::function<void(GLint, GLint, GLsizei, GLsizei)> glScissor;
  std::function<void(GLenum)> glShadeModel;
  std::function<void(GLsizei, const GLuint*, GLenum, const void*, GLsizei)> glShaderBinary;
  std::function<void(GLuint, GLsizei, const GLchar*const*, const GLint*)> glShaderSource;
  std::function<void(GLenum, GLint, GLuint)> glStencilFunc;
  std::function<void(GLenum, GLenum, GLint, GLuint)> glStencilFuncSeparate;
  std::function<void(GLuint)> glStencilMask;
  std::function<void(GLenum, GLuint)> glStencilMaskSeparate;
  std::function<void(GLenum, GLenum, GLenum)> glStencilOp;
  std::function<void(GLenum, GLenum, GLenum, GLenum)> glStencilOpSeparate;
  std::function<void(GLenum, GLenum, GLuint)> glTexBuffer;
  std::function<void(GLenum, GLenum, GLuint, GLintptr, GLsizeiptr)> glTexBufferRange;
  std::function<void(GLint, GLenum, GLsizei, const void*)> glTexCoordPointer;
  std::function<void(GLenum, GLenum, GLfloat)> glTexEnvf;
  std::function<void(GLenum, GLenum, const GLfloat*)> glTexEnvfv;
  std::function<void(GLenum, GLenum, GLint)> glTexEnvi;
  std::function<void(GLenum, GLenum, const GLint*)> glTexEnviv;
  std::function<void(GLenum, GLenum, GLfixed)> glTexEnvx;
  std::function<void(GLenum, GLenum, const GLfixed*)> glTexEnvxv;
  std::function<void(GLenum, GLint, GLint, GLsizei, GLsizei, GLint, GLenum, GLenum, const void*)> glTexImage2D;
  std::function<void(GLenum, GLint, GLint, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, const void*)> glTexImage3D;
  std::function<void(GLenum, GLenum, const GLint*)> glTexParameterIiv;
  std::function<void(GLenum, GLenum, const GLuint*)> glTexParameterIuiv;
  std::function<void(GLenum, GLenum, GLfloat)> glTexParameterf;
  std::function<void(GLenum, GLenum, const GLfloat*)> glTexParameterfv;
  std::function<void(GLenum, GLenum, GLint)> glTexParameteri;
  std::function<void(GLenum, GLenum, const GLint*)> glTexParameteriv;
  std::function<void(GLenum, GLenum, GLfixed)> glTexParameterx;
  std::function<void(GLenum, GLenum, const GLfixed*)> glTexParameterxv;
  std::function<void(GLenum, GLsizei, GLenum, GLsizei, GLsizei)> glTexStorage2D;
  std::function<void(GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLboolean)> glTexStorage2DMultisample;
  std::function<void(GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei)> glTexStorage3D;
  std::function<void(GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei, GLboolean)> glTexStorage3DMultisample;
  std::function<void(GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, const void*)> glTexSubImage2D;
  std::function<void(GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, const void*)> glTexSubImage3D;
  std::function<void(GLuint, GLsizei, const GLchar*const*, GLenum)> glTransformFeedbackVaryings;
  std::function<void(GLfloat, GLfloat, GLfloat)> glTranslatef;
  std::function<void(GLfixed, GLfixed, GLfixed)> glTranslatex;
  std::function<void(GLint, GLfloat)> glUniform1f;
  std::function<void(GLint, GLsizei, const GLfloat*)> glUniform1fv;
  std::function<void(GLint, GLint)> glUniform1i;
  std::function<void(GLint, GLsizei, const GLint*)> glUniform1iv;
  std::function<void(GLint, GLuint)> glUniform1ui;
  std::function<void(GLint, GLsizei, const GLuint*)> glUniform1uiv;
  std::function<void(GLint, GLfloat, GLfloat)> glUniform2f;
  std::function<void(GLint, GLsizei, const GLfloat*)> glUniform2fv;
  std::function<void(GLint, GLint, GLint)> glUniform2i;
  std::function<void(GLint, GLsizei, const GLint*)> glUniform2iv;
  std::function<void(GLint, GLuint, GLuint)> glUniform2ui;
  std::function<void(GLint, GLsizei, const GLuint*)> glUniform2uiv;
  std::function<void(GLint, GLfloat, GLfloat, GLfloat)> glUniform3f;
  std::function<void(GLint, GLsizei, const GLfloat*)> glUniform3fv;
  std::function<void(GLint, GLint, GLint, GLint)> glUniform3i;
  std::function<void(GLint, GLsizei, const GLint*)> glUniform3iv;
  std::function<void(GLint, GLuint, GLuint, GLuint)> glUniform3ui;
  std::function<void(GLint, GLsizei, const GLuint*)> glUniform3uiv;
  std::function<void(GLint, GLfloat, GLfloat, GLfloat, GLfloat)> glUniform4f;
  std::function<void(GLint, GLsizei, const GLfloat*)> glUniform4fv;
  std::function<void(GLint, GLint, GLint, GLint, GLint)> glUniform4i;
  std::function<void(GLint, GLsizei, const GLint*)> glUniform4iv;
  std::function<void(GLint, GLuint, GLuint, GLuint, GLuint)> glUniform4ui;
  std::function<void(GLint, GLsizei, const GLuint*)> glUniform4uiv;
  std::function<void(GLuint, GLuint, GLuint)> glUniformBlockBinding;
  std::function<void(GLint, GLsizei, GLboolean, const GLfloat*)> glUniformMatrix2fv;
  std::function<void(GLint, GLsizei, GLboolean, const GLfloat*)> glUniformMatrix2x3fv;
  std::function<void(GLint, GLsizei, GLboolean, const GLfloat*)> glUniformMatrix2x4fv;
  std::function<void(GLint, GLsizei, GLboolean, const GLfloat*)> glUniformMatrix3fv;
  std::function<void(GLint, GLsizei, GLboolean, const GLfloat*)> glUniformMatrix3x2fv;
  std::function<void(GLint, GLsizei, GLboolean, const GLfloat*)> glUniformMatrix3x4fv;
  std::function<void(GLint, GLsizei, GLboolean, const GLfloat*)> glUniformMatrix4fv;
  std::function<void(GLint, GLsizei, GLboolean, const GLfloat*)> glUniformMatrix4x2fv;
  std::function<void(GLint, GLsizei, GLboolean, const GLfloat*)> glUniformMatrix4x3fv;
  std::function<GLboolean(GLenum)> glUnmapBuffer;
  std::function<void(GLuint)> glUseProgram;
  std::function<void(GLuint, GLbitfield, GLuint)> glUseProgramStages;
  std::function<void(GLuint)> glValidateProgram;
  std::function<void(GLuint)> glValidateProgramPipeline;
  std::function<void(GLuint, GLfloat)> glVertexAttrib1f;
  std::function<void(GLuint, const GLfloat*)> glVertexAttrib1fv;
  std::function<void(GLuint, GLfloat, GLfloat)> glVertexAttrib2f;
  std::function<void(GLuint, const GLfloat*)> glVertexAttrib2fv;
  std::function<void(GLuint, GLfloat, GLfloat, GLfloat)> glVertexAttrib3f;
  std::function<void(GLuint, const GLfloat*)> glVertexAttrib3fv;
  std::function<void(GLuint, GLfloat, GLfloat, GLfloat, GLfloat)> glVertexAttrib4f;
  std::function<void(GLuint, const GLfloat*)> glVertexAttrib4fv;
  std::function<void(GLuint, GLuint)> glVertexAttribBinding;
  std::function<void(GLuint, GLuint)> glVertexAttribDivisor;
  std::function<void(GLuint, GLint, GLenum, GLboolean, GLuint)> glVertexAttribFormat;
  std::function<void(GLuint, GLint, GLint, GLint, GLint)> glVertexAttribI4i;
  std::function<void(GLuint, const GLint*)> glVertexAttribI4iv;
  std::function<void(GLuint, GLuint, GLuint, GLuint, GLuint)> glVertexAttribI4ui;
  std::function<void(GLuint, const GLuint*)> glVertexAttribI4uiv;
  std::function<void(GLuint, GLint, GLenum, GLuint)> glVertexAttribIFormat;
  std::function<void(GLuint, GLint, GLenum, GLsizei, const void*)> glVertexAttribIPointer;
  std::function<void(GLuint, GLint, GLenum, GLboolean, GLsizei, const void*)> glVertexAttribPointer;
  std::function<void(GLuint, GLuint)> glVertexBindingDivisor;
  std::function<void(GLint, GLenum, GLsizei, const void*)> glVertexPointer;
  std::function<void(GLint, GLint, GLsizei, GLsizei)> glViewport;
  std::function<void(GLsync, GLbitfield, GLuint64)> glWaitSync;
};

}  // namespace shadertrap

#endif  // LIBSHADERTRAP_GL_FUNCTIONS_H
