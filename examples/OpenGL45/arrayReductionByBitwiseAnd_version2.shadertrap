# Copyright 2021 The ShaderTrap Project Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

GL 4.5

CREATE_BUFFER input_array SIZE_BYTES 1024 INIT_VALUES uint

CREATE_BUFFER input_array_origin SIZE_BYTES 1024 INIT_VALUES uint 1 3 5 7 9 11 13 15 17 19 21 23 25 27 29 31 33 35 37 39 41 43 45 47 49 51 53 55 57 59 61 63 65 67 69 71 73 75 77 79 81 83 85 87 89 91 93 95 97 99 101 103 105 107 109 111 113 115 117 119 121 123 125 127 129 131 133 135 137 139 141 143 145 147 149 151 153 155 157 159 161 163 165 167 169 171 173 175 177 179 181 183 185 187 189 191 193 195 197 199 201 203 205 207 209 211 213 215 217 219 221 223 225 227 229 231 233 235 237 239 241 243 245 247 249 251 253 255 257 259 261 263 265 267 269 271 273 275 277 279 281 283 285 287 289 291 293 295 297 299 301 303 305 307 309 311 313 315 317 319 321 323 325 327 329 331 333 335 337 339 341 343 345 347 349 351 353 355 357 359 361 363 365 367 369 371 373 375 377 379 381 383 385 387 389 391 393 395 397 399 401 403 405 407 409 411 413 415 417 419 421 423 425 427 429 431 433 435 437 439 441 443 445 447 449 451 453 455 457 459 461 463 465 467 469 471 473 475 477 479 481 483 485 487 489 491 493 495 497 499 501 503 505 507 509 511

CREATE_BUFFER partial_bitwise_and SIZE_BYTES 64 INIT_VALUES uint 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 
CREATE_BUFFER partial_bitwise_and_expected SIZE_BYTES 64 INIT_VALUES uint 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
CREATE_BUFFER result SIZE_BYTES 4 INIT_VALUES uint 511
CREATE_BUFFER expected SIZE_BYTES 4 INIT_VALUES uint 1

BIND_SHADER_STORAGE_BUFFER BUFFER input_array BINDING 0
BIND_SHADER_STORAGE_BUFFER BUFFER partial_bitwise_and BINDING 1
BIND_SHADER_STORAGE_BUFFER BUFFER result BINDING 2

DECLARE_SHADER shader KIND COMPUTE
#version 450

layout(local_size_x=1, local_size_y=1, local_size_z=1) in;

layout(std430, binding = 0) buffer input_array {
  uint[256] data;
};

layout(std430, binding = 1) buffer partial_bitwise_and {
  uint[16] partial_results;
};

layout(std430, binding = 2) buffer result {
  uint res;
};

void main() {
  for(uint i = gl_WorkGroupID[0]*16; i < gl_WorkGroupID[0]*16 + 16; ++i) {
    partial_results[gl_WorkGroupID[0]] &= data[i];
  }
  atomicAnd(res, partial_results[gl_WorkGroupID[0]]);
}
END

COMPILE_SHADER shader_compiled SHADER shader
CREATE_PROGRAM compute_prog SHADERS shader_compiled

RUN_COMPUTE
    PROGRAM compute_prog
    NUM_GROUPS 16 1 1

ASSERT_EQUAL BUFFERS expected result
ASSERT_EQUAL BUFFERS input_array_origin input_array
ASSERT_EQUAL BUFFERS partial_bitwise_and_expected partial_bitwise_and

